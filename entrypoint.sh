#!/bin/bash
cd /project

USAGE="$(basename "$0") [-h] [-i index] [-o index] [-s] [-b] [-c]

where:
	-h, --help
		Display this help.

	-i, --input
		Set input TeX file (default ./index).
		File must be .tex extension.

	-o, --output
		Set output PDF file (default is same as input).

	-s, --silent
		Won't display anything.

	-b, --biber
		Run biber as well.

	-c, --clear
		Clear all temporary files.

(c) 2019 by m1k1o"

INPUT="index"
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	key="$1"

	case $key in
		-h|--help)
		echo "$USAGE" > /dev/stderr
		exit
		;;
		-i|--input)
		INPUT="$(basename "$2" .tex)"
		cd "$(dirname "$2")"

		shift # past argument
		shift # past value
		;;
		-o|--output)
		OUTPUT="$2"
		shift # past argument
		shift # past value
		;;
		-s|--silent)
		SILENT="true"
		shift # past argument
		;;
		-b|--biber)
		BIBER="true"
		shift # past argument
		;;
		-c|--clear)
		CLEAR="true"
		shift # past argument
		;;
		*) # unknown option
		echo "Unknown option $1" > /dev/stderr
		exit
		;;
	esac
done

if [[ "$SILENT" != "true" ]]
then
	OUT="/dev/stderr"
else
	OUT="/dev/null"
fi

echo "
Running with parameters:
PWD    = ${PWD}
INPUT  = ${INPUT}
OUTPUT = ${OUTPUT}
SILENT = ${SILENT}
BIBER  = ${BIBER}
CLEAR  = ${CLEAR}
" > "$OUT"

function runlatex {
	pdflatex -interaction nonstopmode "$INPUT".tex > "$OUT"
}

function runbiber {
	biber "$INPUT" > "$OUT"
}

# Run LaTeX to generate the AUX file. It adds a line every time it finds a cite.
runlatex &&

# After using biber, make PDF 2x
if [[ "$BIBER" == "true" ]]
then
	# Run BibTeX (executable: biber) to generate the BBL (from the AUX lines).
	runbiber &&

	# Then run LaTeX again, which will include the BBL.
	runlatex &&

	# Then run LaTeX again to make any updates corresponding to including the possibly massive BBL.
	runlatex
fi

# Clean files generated by
if [[ "$CLEAR" == "true" ]]
then
	rm -f .log *.out *.log *.dvi *.aux *.toc *.bbl *.blg *.bcf *.run.xml 2> /dev/null
fi

# Move to output
if [[ ! -z "$OUTPUT" ]]
then
	mv "$INPUT".pdf "$OUTPUT"
fi
